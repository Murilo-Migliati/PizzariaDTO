// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzaria.Data;

#nullable disable

namespace Pizzaria.Data.Migrations
{
    [DbContext(typeof(PizzariaContext))]
    [Migration("20241013132549_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Pizzaria.Models.Cliente", b =>
                {
                    b.Property<int>("Cpf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CPF");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Cpf");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Pizzaria.Models.Pizzas", b =>
                {
                    b.Property<int>("IdPizza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("idPizza");

                    b.Property<double?>("Preco")
                        .HasColumnType("REAL");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sabor")
                        .HasColumnType("TEXT");

                    b.HasKey("IdPizza");

                    b.HasIndex(new[] { "Sabor" }, "IX_Pizzas_Sabor")
                        .IsUnique();

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("Pizzaria.Models.PizzasVenda", b =>
                {
                    b.Property<int>("IdPizza")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idPizza");

                    b.Property<int>("IdVenda")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idVenda");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("IdPizza", "IdVenda");

                    b.HasIndex("IdVenda");

                    b.ToTable("PizzasVenda");
                });

            modelBuilder.Entity("Pizzaria.Models.Venda", b =>
                {
                    b.Property<int>("IdVenda")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idVenda");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idCliente");

                    b.Property<double?>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("IdVenda");

                    b.HasIndex("IdCliente");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("Pizzaria.Models.PizzasVenda", b =>
                {
                    b.HasOne("Pizzaria.Models.Pizzas", "IdPizzaNavigation")
                        .WithMany("PizzasVenda")
                        .HasForeignKey("IdPizza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzaria.Models.Venda", "IdVendaNavigation")
                        .WithMany("PizzasVenda")
                        .HasForeignKey("IdVenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPizzaNavigation");

                    b.Navigation("IdVendaNavigation");
                });

            modelBuilder.Entity("Pizzaria.Models.Venda", b =>
                {
                    b.HasOne("Pizzaria.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Venda")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("Pizzaria.Models.Cliente", b =>
                {
                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Pizzaria.Models.Pizzas", b =>
                {
                    b.Navigation("PizzasVenda");
                });

            modelBuilder.Entity("Pizzaria.Models.Venda", b =>
                {
                    b.Navigation("PizzasVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
